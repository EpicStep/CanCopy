# Copied from https://raw.githubusercontent.com/aklinker1/github-better-line-counts/refs/heads/main/.github/workflows/submit.yml and edited for CanCopy.

name: Release
on:
  workflow_dispatch:
    inputs:
      dryRun:
        default: false
        type: boolean
        description: Skip submission and perform a dry run.
      bumpType:
        default: patch
        type: choice
        options:
          - patch
          - minor
          - major
        description: Select the version bump type for the release.

jobs:
  pre-checks:
    name: Run Tests and Linter
    uses: ./.github/workflows/tests-and-lint.yml

  submit:
    name: Submit
    runs-on: ubuntu-latest
    needs: [pre-checks]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v4
  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
            node-version: '22'

      - name: Configure Git
        run: |
          git config user.email "github-actions@users.noreply.github.com"
          git config user.name "GitHub Actions"

      - name: Install dependencies
        run: pnpm install

      - name: Bump Version
        id: version
        run: |
          pnpm dlx changelogen@latest --bump --${{ inputs.bumpType }}
          NEW_VERSION=$(node -p 'require("./package.json").version')
          echo "newVersion=$NEW_VERSION" >> "$GITHUB_OUTPUT"

      - name: Build and Zip
        run: |
          pnpm run zip
          pnpm run zip:firefox

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          path: .output/*.zip
          if-no-files-found: error
          include-hidden-files: true

      - name: Commit and Push
        if: ${{ !inputs.dryRun }}
        run: |
          git add package.json CHANGELOG.md
          git commit -am "chore(release): v$NEW_VERSION"
          git tag v$NEW_VERSION
          git push
          git push --tags
        env:
          NEW_VERSION: ${{ steps.version.outputs.newVersion }}

      - name: Release
        if: ${{ !inputs.dryRun }}
        run: pnpm dlx changelogen@latest gh release ${{ steps.version.outputs.newVersion }} --token ${{ github.token }}
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Upload ZIPs
        if: ${{ !inputs.dryRun }}
        run: gh release upload v${{ steps.version.outputs.newVersion }} .output/*-chrome.zip .output/*-firefox.zip .output/*-sources.zip
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Submit
        run: |
          pnpm wxt submit \
            --chrome-zip .output/*-chrome.zip \
            --firefox-zip .output/*-firefox.zip --firefox-sources-zip .output/*-sources.zip
        env:
          DRY_RUN: ${{ inputs.dryRun }}
          CHROME_EXTENSION_ID: ${{ secrets.CHROME_EXTENSION_ID }}
          CHROME_CLIENT_ID: ${{ secrets.CHROME_CLIENT_ID }}
          CHROME_CLIENT_SECRET: ${{ secrets.CHROME_CLIENT_SECRET }}
          CHROME_REFRESH_TOKEN: ${{ secrets.CHROME_REFRESH_TOKEN }}
          FIREFOX_EXTENSION_ID: ${{ secrets.FIREFOX_EXTENSION_ID }}
          FIREFOX_JWT_ISSUER: ${{ secrets.FIREFOX_JWT_ISSUER }}
          FIREFOX_JWT_SECRET: ${{ secrets.FIREFOX_JWT_SECRET }}
